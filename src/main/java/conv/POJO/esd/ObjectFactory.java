//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.11.28 at 12:23:34 PM GMT+05:00 
//


package conv.POJO.esd;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the conv.POJO.esd package.
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Contents_QNAME = new QName("", "Contents");
    private final static QName _Data_QNAME = new QName("", "Data");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: conv.POJO.esd
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Comment }
     * 
     */
    public Comment createComment() {
        return new Comment();
    }

    /**
     * Create an instance of {@link Organization }
     * 
     */
    public Organization createOrganization() {
        return new Organization();
    }

    /**
     * Create an instance of {@link ESD }
     * 
     */
    public ESD createESD() {
        return new ESD();
    }

    /**
     * Create an instance of {@link Header }
     * 
     */
    public Header createHeader() {
        return new Header();
    }

    /**
     * Create an instance of {@link ExtAttributes }
     * 
     */
    public ExtAttributes createExtAttributes() {
        return new ExtAttributes();
    }

    /**
     * Create an instance of {@link ID }
     * 
     */
    public ID createID() {
        return new ID();
    }

    /**
     * Create an instance of {@link VersionNumber }
     * 
     */
    public VersionNumber createVersionNumber() {
        return new VersionNumber();
    }

    /**
     * Create an instance of {@link DigitalSignatures }
     * 
     */
    public DigitalSignatures createDigitalSignatures() {
        return new DigitalSignatures();
    }

    /**
     * Create an instance of {@link DigitalSignature }
     * 
     */
    public DigitalSignature createDigitalSignature() {
        return new DigitalSignature();
    }

    /**
     * Create an instance of {@link Attributes }
     * 
     */
    public Attributes createAttributes() {
        return new Attributes();
    }

    /**
     * Create an instance of {@link SignedByUserName }
     * 
     */
    public SignedByUserName createSignedByUserName() {
        return new SignedByUserName();
    }

    /**
     * Create an instance of {@link InTheNameOfUserName }
     * 
     */
    public InTheNameOfUserName createInTheNameOfUserName() {
        return new InTheNameOfUserName();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Contents")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createContents(String value) {
        return new JAXBElement<String>(_Contents_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Data")
    public JAXBElement<String> createData(String value) {
        return new JAXBElement<String>(_Data_QNAME, String.class, null, value);
    }

}
